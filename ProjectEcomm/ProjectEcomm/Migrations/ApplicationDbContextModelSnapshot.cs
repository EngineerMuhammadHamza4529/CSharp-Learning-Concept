// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectEcomm.Data;

namespace ProjectEcomm.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ProjectEcomm.Model.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BookCoverID")
                        .HasColumnType("int");

                    b.Property<string>("BookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BookWriterID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBNNUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookID");

                    b.HasIndex("BookCoverID");

                    b.HasIndex("BookWriterID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("ProjectEcomm.Model.BookCover", b =>
                {
                    b.Property<int>("BookCoverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("BookWriterID")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookCoverID");

                    b.HasIndex("BookWriterID");

                    b.ToTable("BookCovers");
                });

            modelBuilder.Entity("ProjectEcomm.Model.BookWriter", b =>
                {
                    b.Property<int>("BookWriterID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookWriterID");

                    b.ToTable("BookWriters");
                });

            modelBuilder.Entity("ProjectEcomm.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CategoryImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 8, 10, 22, 52, 28, 126, DateTimeKind.Local).AddTicks(5441),
                            DisplayOrder = 1,
                            Title = "Samsung"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 8, 10, 22, 52, 28, 131, DateTimeKind.Local).AddTicks(1110),
                            DisplayOrder = 2,
                            Title = "Xiomi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 8, 10, 22, 52, 28, 131, DateTimeKind.Local).AddTicks(1181),
                            DisplayOrder = 3,
                            Title = "Nokia"
                        });
                });

            modelBuilder.Entity("ProjectEcomm.Model.Book", b =>
                {
                    b.HasOne("ProjectEcomm.Model.BookCover", "BookCover")
                        .WithMany("Books")
                        .HasForeignKey("BookCoverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjectEcomm.Model.BookWriter", "BookWriter")
                        .WithMany("Books")
                        .HasForeignKey("BookWriterID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BookCover");

                    b.Navigation("BookWriter");
                });

            modelBuilder.Entity("ProjectEcomm.Model.BookCover", b =>
                {
                    b.HasOne("ProjectEcomm.Model.BookWriter", null)
                        .WithMany("BookCovers")
                        .HasForeignKey("BookWriterID");
                });

            modelBuilder.Entity("ProjectEcomm.Model.BookCover", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("ProjectEcomm.Model.BookWriter", b =>
                {
                    b.Navigation("BookCovers");

                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
